// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SistemaEstoque.Infra.Data;

#nullable disable

namespace SistemaEstoque.Infra.Migrations
{
    [DbContext(typeof(SistemaEstoqueDbContext))]
    [Migration("20240710184719_Add_Lote_Insumo")]
    partial class AddLoteInsumo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SistemaEstoque.Domain.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descricao");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int")
                        .HasColumnName("empresa_id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nome");

                    b.Property<bool?>("Removido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("removido");

                    b.Property<string>("TipoItem")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tipo_item");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("categorias", (string)null);
                });

            modelBuilder.Entity("SistemaEstoque.Domain.Entities.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BOOLEAN")
                        .HasDefaultValue(true)
                        .HasColumnName("ativo");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(8)")
                        .HasColumnName("cep");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("cidade");

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasColumnType("varchar(14)")
                        .HasColumnName("cpf_cnpj");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("email");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("endereco");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(2)")
                        .HasColumnName("estado");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nome");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(15)")
                        .HasColumnName("telefone");

                    b.Property<string>("TipoEmpresa")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tipo_empresa");

                    b.HasKey("Id");

                    b.ToTable("empresas", (string)null);
                });

            modelBuilder.Entity("SistemaEstoque.Domain.Entities.Estoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int")
                        .HasColumnName("empresa_id");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int")
                        .HasColumnName("produto_id");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int")
                        .HasColumnName("quantidade");

                    b.Property<int>("QuantidadeMaxima")
                        .HasColumnType("int")
                        .HasColumnName("quantidade_maxima");

                    b.Property<int>("QuantidadeMinima")
                        .HasColumnType("int")
                        .HasColumnName("quantidade_minima");

                    b.Property<bool?>("Removido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BOOLEAN")
                        .HasDefaultValue(false)
                        .HasColumnName("removido");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("estoques", (string)null);
                });

            modelBuilder.Entity("SistemaEstoque.Domain.Entities.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(8)")
                        .HasColumnName("cep");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("cidade");

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasColumnType("varchar(14)")
                        .HasColumnName("cpf_cnpj");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("email");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int")
                        .HasColumnName("empresa_id");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("endereco");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(2)")
                        .HasColumnName("estado");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nome");

                    b.Property<bool?>("Removido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("removido");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(15)")
                        .HasColumnName("telefone");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("fornecedores", (string)null);
                });

            modelBuilder.Entity("SistemaEstoque.Domain.Entities.Insumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int")
                        .HasColumnName("categoria_id");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descricao");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int")
                        .HasColumnName("empresa_id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nome");

                    b.Property<decimal?>("PrecoCustoReferencia")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("preco_custo_referencia");

                    b.Property<decimal?>("PrecoVendaReferencia")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("preco_venda_referencia");

                    b.Property<bool?>("Removido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("removido");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("insumos", (string)null);
                });

            modelBuilder.Entity("SistemaEstoque.Domain.Entities.LogAlteracao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AlteradoEm")
                        .HasColumnType("date")
                        .HasColumnName("alterado_em");

                    b.Property<string>("DadosAntigos")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("dados_antigos");

                    b.Property<string>("DadosNovos")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("dados_novos");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int")
                        .HasColumnName("empresa_id");

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int")
                        .HasColumnName("quantidade");

                    b.Property<string>("Tabela")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tabela");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tipo");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("logs_alteracoes", (string)null);
                });

            modelBuilder.Entity("SistemaEstoque.Domain.Entities.LoteInsumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("codigo");

                    b.Property<string>("CodigoBarras")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("codigo_barras");

                    b.Property<DateTime>("DataFabricacao")
                        .HasColumnType("timestamp")
                        .HasColumnName("data_fabricacao");

                    b.Property<DateTime>("DataValidade")
                        .HasColumnType("timestamp")
                        .HasColumnName("data_validade");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int")
                        .HasColumnName("empresa_id");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("int")
                        .HasColumnName("fornecedor_id");

                    b.Property<int>("InsumoId")
                        .HasColumnType("int")
                        .HasColumnName("insumo_id");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int")
                        .HasColumnName("quantidade");

                    b.Property<bool?>("Removido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("removido");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("InsumoId");

                    b.ToTable("lotes_insumos", (string)null);
                });

            modelBuilder.Entity("SistemaEstoque.Domain.Entities.LoteProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("codigo");

                    b.Property<string>("CodigoBarras")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("codigo_barras");

                    b.Property<DateTime>("DataFabricacao")
                        .HasColumnType("timestamp")
                        .HasColumnName("data_fabricacao");

                    b.Property<DateTime>("DataValidade")
                        .HasColumnType("timestamp")
                        .HasColumnName("data_validade");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int")
                        .HasColumnName("empresa_id");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("int")
                        .HasColumnName("fornecedor_id");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int")
                        .HasColumnName("produto_id");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int")
                        .HasColumnName("quantidade");

                    b.Property<bool?>("Removido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("removido");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("lotes_produtos", (string)null);
                });

            modelBuilder.Entity("SistemaEstoque.Domain.Entities.MovimentacaoInsumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataMovimentacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int>("InsumoId")
                        .HasColumnType("int");

                    b.Property<int>("LoteInsumoId")
                        .HasColumnType("int");

                    b.Property<int>("Origem")
                        .HasColumnType("integer");

                    b.Property<decimal>("PrecoUnitarioCusto")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PrecoUnitarioVenda")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.Property<bool?>("Removido")
                        .HasColumnType("boolean");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("InsumoId");

                    b.HasIndex("LoteInsumoId")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("MovimentacaoInsumo");
                });

            modelBuilder.Entity("SistemaEstoque.Domain.Entities.MovimentacaoProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataMovimentacao")
                        .HasColumnType("date")
                        .HasColumnName("data_movimentacao");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int")
                        .HasColumnName("empresa_id");

                    b.Property<int>("LoteProdutoId")
                        .HasColumnType("int")
                        .HasColumnName("lote_id");

                    b.Property<string>("Origem")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("origem");

                    b.Property<decimal>("PrecoUnitarioCusto")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("preco_unitario_custo");

                    b.Property<decimal>("PrecoUnitarioVenda")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("preco_unitario_venda");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int")
                        .HasColumnName("produto_id");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int")
                        .HasColumnName("quantidade");

                    b.Property<bool?>("Removido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("removido");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tipo");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("LoteProdutoId")
                        .IsUnique();

                    b.HasIndex("ProdutoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("movimentacoes_produtos", (string)null);
                });

            modelBuilder.Entity("SistemaEstoque.Domain.Entities.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int")
                        .HasColumnName("categoria_id");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(150)")
                        .HasColumnName("descricao");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int")
                        .HasColumnName("empresa_id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nome");

                    b.Property<decimal?>("PrecoCustoReferencia")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("preco_custo_referencia");

                    b.Property<decimal?>("PrecoVendaReferencia")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("preco_venda_referencia");

                    b.Property<bool?>("Removido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("removido");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("produtos", (string)null);
                });

            modelBuilder.Entity("SistemaEstoque.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("AcessoBloqueado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("acesso_bloqueado");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("email");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int")
                        .HasColumnName("empresa_id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nome");

                    b.Property<bool?>("Removido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("removido");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("senha");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("SistemaEstoque.Domain.Entities.Categoria", b =>
                {
                    b.HasOne("SistemaEstoque.Domain.Entities.Empresa", "Empresa")
                        .WithMany("Categorias")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("SistemaEstoque.Domain.Entities.Estoque", b =>
                {
                    b.HasOne("SistemaEstoque.Domain.Entities.Empresa", "Empresa")
                        .WithMany("Estoques")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("SistemaEstoque.Domain.Entities.Produto", "Produto")
                        .WithMany("Estoques")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("SistemaEstoque.Domain.Entities.Fornecedor", b =>
                {
                    b.HasOne("SistemaEstoque.Domain.Entities.Empresa", "Empresa")
                        .WithMany("Fornecedores")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("SistemaEstoque.Domain.Entities.Insumo", b =>
                {
                    b.HasOne("SistemaEstoque.Domain.Entities.Categoria", "Categoria")
                        .WithMany("Insumos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("SistemaEstoque.Domain.Entities.Empresa", "Empresa")
                        .WithMany("Insumos")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("SistemaEstoque.Domain.Entities.LogAlteracao", b =>
                {
                    b.HasOne("SistemaEstoque.Domain.Entities.Empresa", "Empresa")
                        .WithMany("LogsAlteracoes")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("SistemaEstoque.Domain.Entities.Usuario", "Usuario")
                        .WithMany("LogsAlteracoes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaEstoque.Domain.Entities.LoteInsumo", b =>
                {
                    b.HasOne("SistemaEstoque.Domain.Entities.Empresa", "Empresa")
                        .WithMany("LotesInsumos")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("SistemaEstoque.Domain.Entities.Fornecedor", "Fornecedor")
                        .WithMany("LotesInsumos")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("SistemaEstoque.Domain.Entities.Insumo", "Insumo")
                        .WithMany("LotesInsumo")
                        .HasForeignKey("InsumoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Fornecedor");

                    b.Navigation("Insumo");
                });

            modelBuilder.Entity("SistemaEstoque.Domain.Entities.LoteProduto", b =>
                {
                    b.HasOne("SistemaEstoque.Domain.Entities.Empresa", "Empresa")
                        .WithMany("LotesProdutos")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("SistemaEstoque.Domain.Entities.Fornecedor", "Fornecedor")
                        .WithMany("LotesProdutos")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("SistemaEstoque.Domain.Entities.Produto", "Produto")
                        .WithMany("LotesProdutos")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Fornecedor");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("SistemaEstoque.Domain.Entities.MovimentacaoInsumo", b =>
                {
                    b.HasOne("SistemaEstoque.Domain.Entities.Empresa", "Empresa")
                        .WithMany("MovimentacoesInsumos")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("SistemaEstoque.Domain.Entities.Insumo", "Insumo")
                        .WithMany("MovimentacoesInsumo")
                        .HasForeignKey("InsumoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaEstoque.Domain.Entities.LoteInsumo", "LoteInsumo")
                        .WithOne("MovimentacaoInsumo")
                        .HasForeignKey("SistemaEstoque.Domain.Entities.MovimentacaoInsumo", "LoteInsumoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaEstoque.Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Insumo");

                    b.Navigation("LoteInsumo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaEstoque.Domain.Entities.MovimentacaoProduto", b =>
                {
                    b.HasOne("SistemaEstoque.Domain.Entities.Empresa", "Empresa")
                        .WithMany("MovimentacoesProdutos")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("SistemaEstoque.Domain.Entities.LoteProduto", "LoteProduto")
                        .WithOne("MovimentacaoProduto")
                        .HasForeignKey("SistemaEstoque.Domain.Entities.MovimentacaoProduto", "LoteProdutoId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("SistemaEstoque.Domain.Entities.Produto", "Produto")
                        .WithMany("MovimentacoesProdutos")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("SistemaEstoque.Domain.Entities.Usuario", "Usuario")
                        .WithMany("MovimentacoesProdutos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("LoteProduto");

                    b.Navigation("Produto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaEstoque.Domain.Entities.Produto", b =>
                {
                    b.HasOne("SistemaEstoque.Domain.Entities.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("SistemaEstoque.Domain.Entities.Empresa", "Empresa")
                        .WithMany("Produtos")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("SistemaEstoque.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("SistemaEstoque.Domain.Entities.Empresa", "Empresa")
                        .WithMany("Usuarios")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("SistemaEstoque.Domain.Entities.Categoria", b =>
                {
                    b.Navigation("Insumos");

                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("SistemaEstoque.Domain.Entities.Empresa", b =>
                {
                    b.Navigation("Categorias");

                    b.Navigation("Estoques");

                    b.Navigation("Fornecedores");

                    b.Navigation("Insumos");

                    b.Navigation("LogsAlteracoes");

                    b.Navigation("LotesInsumos");

                    b.Navigation("LotesProdutos");

                    b.Navigation("MovimentacoesInsumos");

                    b.Navigation("MovimentacoesProdutos");

                    b.Navigation("Produtos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("SistemaEstoque.Domain.Entities.Fornecedor", b =>
                {
                    b.Navigation("LotesInsumos");

                    b.Navigation("LotesProdutos");
                });

            modelBuilder.Entity("SistemaEstoque.Domain.Entities.Insumo", b =>
                {
                    b.Navigation("LotesInsumo");

                    b.Navigation("MovimentacoesInsumo");
                });

            modelBuilder.Entity("SistemaEstoque.Domain.Entities.LoteInsumo", b =>
                {
                    b.Navigation("MovimentacaoInsumo")
                        .IsRequired();
                });

            modelBuilder.Entity("SistemaEstoque.Domain.Entities.LoteProduto", b =>
                {
                    b.Navigation("MovimentacaoProduto")
                        .IsRequired();
                });

            modelBuilder.Entity("SistemaEstoque.Domain.Entities.Produto", b =>
                {
                    b.Navigation("Estoques");

                    b.Navigation("LotesProdutos");

                    b.Navigation("MovimentacoesProdutos");
                });

            modelBuilder.Entity("SistemaEstoque.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("LogsAlteracoes");

                    b.Navigation("MovimentacoesProdutos");
                });
#pragma warning restore 612, 618
        }
    }
}
